Public Sub UpdateSheetData()
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim key As String
    Dim dataDict As Object
    Dim rowIndex As Long
    Dim keysAdded As Object
    Dim lengthValue As Double

    ' Dictionary 생성
    Set dataDict = CreateObject("Scripting.Dictionary")
    Set keysAdded = CreateObject("Scripting.Dictionary")

    ' 모든 시트를 순회하며 데이터 업데이트
    For Each ws In ThisWorkbook.Worksheets
        On Error Resume Next
        If ws.CustomProperties("GeneratedByMacro").Value = "True" Then
            On Error GoTo 0
            
            ' 헤더 위치 동적으로 찾기
            Dim itemCol As Long, lengthCol As Long, nameCol As Long, utilityCol As Long, widthCol As Long, elevationCol As Long
            itemCol = FindColumn(ws, "item")
            lengthCol = FindColumn(ws, "length")
            nameCol = FindColumn(ws, "name")
            utilityCol = FindColumn(ws, "utility")
            widthCol = FindColumn(ws, "width/diameter")
            elevationCol = FindColumn(ws, "elevation")
            
            ' 각 열이 발견되지 않은 경우 메시지를 출력하고 다음 시트로 이동
            If itemCol = 0 Or lengthCol = 0 Or nameCol = 0 Or utilityCol = 0 Or widthCol = 0 Or elevationCol = 0 Then
                MsgBox "필요한 헤더를 찾을 수 없습니다. 시트: " & ws.Name, vbExclamation
                GoTo NextSheet
            End If
            
            ' 시트의 마지막 행 찾기
            lastRow = ws.Cells(ws.Rows.Count, nameCol).End(xlUp).Row
            
            ' 키 생성 및 Length 합산
            dataDict.RemoveAll
            For rowIndex = 2 To lastRow
                If Len(Trim(ws.Cells(rowIndex, nameCol).Value)) > 0 Then ' "Name" 열이 비어 있지 않은 경우
                    key = CleanString(ws.Cells(rowIndex, nameCol).Value) ' 기본적으로 이름을 키로 사용
                    
                    ' 키 생성: 각 값을 공백 제거하고 연결하여 고유 키 생성
                    key = key & "|" & _
                          CleanString(ws.Cells(rowIndex, widthCol).Value) & "|" & _
                          CleanString(ws.Cells(rowIndex, utilityCol).Value)
                    
                    ' Length 값을 가져옴 (elevation 제외)
                    If IsNumeric(ws.Cells(rowIndex, lengthCol).Value) Then
                        lengthValue = CDbl(ws.Cells(rowIndex, lengthCol).Value)
                        
                        ' "Item"이 "Pipe"인 경우 Length 값을 1000으로 나누고 소수점 3번째 자리 이후 버리고 소수점 첫째 자리까지 반올림
                        If Trim(LCase(ws.Cells(rowIndex, itemCol).Value)) = "pipe" Then
                            lengthValue = lengthValue / 1000
                            lengthValue = WorksheetFunction.RoundDown(lengthValue * 100, 0) / 100
                            lengthValue = WorksheetFunction.Round(lengthValue, 1)
                        End If
                        
                        ' 합산 로직 수행
                        If dataDict.exists(key) Then
                            dataDict(key) = dataDict(key) + lengthValue
                        Else
                            dataDict.Add key, lengthValue
                        End If
                    End If
                End If
            Next rowIndex
            
            ' 중복을 제거하고 Length 합산 결과를 기존 셀에 반영
            keysAdded.RemoveAll
            rowIndex = 2 ' 첫 번째 데이터 행부터 시작
            Do While rowIndex <= lastRow
                If Len(Trim(ws.Cells(rowIndex, nameCol).Value)) > 0 Then
                    ' 키 생성 (elevation 제외)
                    key = CleanString(ws.Cells(rowIndex, nameCol).Value) & "|" & _
                          CleanString(ws.Cells(rowIndex, widthCol).Value) & "|" & _
                          CleanString(ws.Cells(rowIndex, utilityCol).Value)
                    
                    ' 해당 키가 이미 처리되었는지 확인
                    If Not keysAdded.exists(key) Then
                        ' 합산된 Length 값을 업데이트
                        ws.Cells(rowIndex, lengthCol).Value = dataDict(key)
                        keysAdded.Add key, True
                        rowIndex = rowIndex + 1
                    Else
                        ' 중복된 행의 경우 데이터를 삭제
                        ws.Rows(rowIndex).Delete
                        lastRow = lastRow - 1
                    End If
                Else
                    rowIndex = rowIndex + 1
                End If
            Loop
            
        End If
NextSheet:
    Next ws
End Sub

Public Function FindColumn(ws As Worksheet, header As String) As Long
    Dim cell As Range
    For Each cell In ws.Rows(1).Cells
        If LCase(Trim(cell.Value)) = LCase(Trim(header)) Then
            FindColumn = cell.Column
            Exit Function
        End If
    Next cell
    FindColumn = 0 ' 헤더를 찾지 못한 경우
End Function

Public Function CleanString(inputString As String) As String
    ' 공백 제거 및 대소문자 통일, 숨겨진 문자 제거
    On Error Resume Next
    inputString = Trim(inputString) ' 앞뒤 공백 제거
    inputString = Replace(inputString, Chr(160), " ") ' 비정상적인 공백 문자를 일반 공백으로 변경
    inputString = Replace(inputString, vbCr, "") ' 캐리지 리턴 제거
    inputString = Replace(inputString, vbLf, "") ' 줄 바꿈 제거
    inputString = Replace(inputString, vbTab, "") ' 탭 제거
    CleanString = LCase(inputString) ' 소문자로 변환
    On Error GoTo 0
End Function
