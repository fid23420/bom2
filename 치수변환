Sub DynamicDataComparisonOptimized()
    Dim wsPaste As Worksheet, wsCompare As Worksheet, wsCondition As Worksheet
    Dim itemCol As Range, sizeCol As Range, nameCol As Range, widthCol As Range
    Dim compareNameCol As Range, compareWidthCol As Range
    Dim conditionSizeCol As Range, conditionSizeConvertCol As Range, conditionOtherCol As Range
    Dim lastRowPaste As Long, lastRowCompare As Long, lastRowCondition As Long
    Dim pasteRow As Long, compareRow As Long, conditionRow As Long
    Dim nameDict As Object, conditionDict As Object, otherNameDict As Object
    Dim pasteName As String, compareName As String, conditionSize As String, otherName As String

    Set wsPaste = ThisWorkbook.Sheets("붙여넣기")
    Set wsCompare = ThisWorkbook.Sheets("비교")
    Set wsCondition = ThisWorkbook.Sheets("조건")
    
    ' 딕셔너리 초기화
    Set nameDict = CreateObject("Scripting.Dictionary")
    Set conditionDict = CreateObject("Scripting.Dictionary")
    Set otherNameDict = CreateObject("Scripting.Dictionary")
    
    ' 열 찾기
    Set itemCol = wsPaste.Rows(1).Find("item", , xlValues, xlWhole, , xlNext, False)
    Set sizeCol = wsPaste.Rows(1).Find("size", , xlValues, xlWhole, , xlNext, False)
    Set nameCol = wsPaste.Rows(1).Find("name", , xlValues, xlWhole, , xlNext, False)
    Set widthCol = wsPaste.Rows(1).Find("width/diameter", , xlValues, xlWhole, , xlNext, False)
    
    Set compareNameCol = wsCompare.Rows(1).Find("name", , xlValues, xlWhole, , xlNext, False)
    Set compareWidthCol = wsCompare.Rows(1).Find("width", , xlValues, xlWhole, , xlNext, False)
    
    Set conditionSizeCol = wsCondition.Rows(1).Find("치수", , xlValues, xlWhole, , xlNext, False)
    Set conditionSizeConvertCol = wsCondition.Rows(1).Find("치수변환", , xlValues, xlWhole, , xlNext, False)
    Set conditionOtherCol = wsCondition.Rows(1).Find("기타", , xlValues, xlWhole, , xlNext, False)
    
    If Not itemCol Is Nothing And Not sizeCol Is Nothing And Not nameCol Is Nothing And Not widthCol Is Nothing _
    And Not compareNameCol Is Nothing And Not compareWidthCol Is Nothing And Not conditionSizeCol Is Nothing _
    And Not conditionSizeConvertCol Is Nothing And Not conditionOtherCol Is Nothing Then
        lastRowPaste = wsPaste.Cells(wsPaste.Rows.Count, nameCol.Column).End(xlUp).Row
        lastRowCompare = wsCompare.Cells(wsCompare.Rows.Count, compareNameCol.Column).End(xlUp).Row
        lastRowCondition = wsCondition.Cells(wsCondition.Rows.Count, conditionOtherCol.Column).End(xlUp).Row
        
        ' 비교 데이터 딕셔너리로 저장
        For compareRow = 2 To lastRowCompare
            compareName = Trim(wsCompare.Cells(compareRow, compareNameCol.Column).Value)
            If Not nameDict.exists(compareName) Then
                nameDict(compareName) = wsCompare.Cells(compareRow, compareWidthCol.Column).Value
            End If
        Next compareRow
        
        ' 조건 데이터 딕셔너리로 저장
        For conditionRow = 2 To lastRowCondition
            conditionSize = Trim(wsCondition.Cells(conditionRow, conditionSizeCol.Column).Value)
            If Not conditionDict.exists(conditionSize) Then
                conditionDict(conditionSize) = wsCondition.Cells(conditionRow, conditionSizeConvertCol.Column).Value
            End If
        Next conditionRow
        
        ' 기타 항목 데이터 딕셔너리로 저장
        For conditionRow = conditionOtherCol.Row + 1 To lastRowCondition
            otherName = Trim(wsCondition.Cells(conditionRow, conditionOtherCol.Column).Value)
            If Not otherNameDict.exists(otherName) Then
                otherNameDict(otherName) = True
            End If
        Next conditionRow
        
        ' 붙여넣기 데이터 처리
        For pasteRow = 2 To lastRowPaste
            pasteName = Trim(wsPaste.Cells(pasteRow, nameCol.Column).Value)
            
            ' 기타 항목 처리
            If otherNameDict.exists(pasteName) Then
                If nameDict.exists(pasteName) Then
                    wsPaste.Cells(pasteRow, widthCol.Column).Value = nameDict(pasteName)
                End If
            Else
                ' component 항목 처리
                If InStr(1, wsPaste.Cells(pasteRow, itemCol.Column).Value, "component", vbTextCompare) > 0 Then
                    If nameDict.exists(pasteName) Then
                        wsPaste.Cells(pasteRow, widthCol.Column).Value = nameDict(pasteName)
                    End If
                End If
                
                ' pipe 항목 처리
                If InStr(1, wsPaste.Cells(pasteRow, itemCol.Column).Value, "pipe", vbTextCompare) > 0 Then
                    If conditionDict.exists(wsPaste.Cells(pasteRow, widthCol.Column).Value) Then
                        wsPaste.Cells(pasteRow, widthCol.Column).Value = conditionDict(wsPaste.Cells(pasteRow, widthCol.Column).Value)
                    End If
                End If
            End If
        Next pasteRow
    Else
        MsgBox "필요한 열을 찾을 수 없습니다.", vbExclamation
    End If
End Sub