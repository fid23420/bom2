Public Sub UpdateSheetWithSequence()
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim compareWs As Worksheet
    Dim conditionWs As Worksheet
    Dim dataDict As Object
    Dim excludeDict As Object
    Dim rowIndex As Long
    Dim sequenceCol As Long
    Dim sequenceValue As String
    Dim debugFilePath As String
    Dim debugFile As Integer

    ' 디버깅 파일 경로 설정
    debugFilePath = ThisWorkbook.Path & "\DebugOutput.txt"
    debugFile = FreeFile
    
    ' 디버깅 파일 열기
    Open debugFilePath For Output As #debugFile

    ' Dictionary 생성
    Set dataDict = CreateObject("Scripting.Dictionary")
    Set excludeDict = CreateObject("Scripting.Dictionary")

    ' 조건 시트에서 제외할 시트 목록 가져오기
    Set conditionWs = ThisWorkbook.Worksheets("조건")
    lastRow = conditionWs.Cells(conditionWs.Rows.Count, 1).End(xlUp).Row
    For rowIndex = 2 To lastRow
        Dim excludeSheet As String
        excludeSheet = CleanString(conditionWs.Cells(rowIndex, 1).Value)
        Print #debugFile, "Exclude Sheet: " & excludeSheet
        If Len(excludeSheet) > 0 And Not excludeDict.exists(excludeSheet) Then
            excludeDict.Add excludeSheet, True
            Print #debugFile, "Sheet added to exclusion: " & excludeSheet
        End If
    Next rowIndex

    ' 비교 시트 데이터 읽기
    Set compareWs = ThisWorkbook.Worksheets("비교")
    lastRow = compareWs.Cells(compareWs.Rows.Count, 1).End(xlUp).Row
    sequenceCol = FindColumn(compareWs, "순번")
    If sequenceCol = 0 Then
        MsgBox "비교 시트에서 순번 열을 찾을 수 없습니다.", vbExclamation
        Exit Sub
    End If
    For rowIndex = 2 To lastRow
        Dim compareKey As String
        If Len(Trim(compareWs.Cells(rowIndex, 3).Value)) > 0 Then ' utility 값이 비어 있지 않은 경우
            compareKey = CleanString(compareWs.Cells(rowIndex, 1).Value) & "|" & _
                         CleanString(compareWs.Cells(rowIndex, 2).Value) & "|" & _
                         CleanString(compareWs.Cells(rowIndex, 3).Value)
        Else ' utility 값이 비어 있는 경우
            compareKey = CleanString(compareWs.Cells(rowIndex, 1).Value) & "|" & _
                         CleanString(compareWs.Cells(rowIndex, 2).Value)
        End If

        If Not dataDict.exists(compareKey) Then
            dataDict.Add compareKey, compareWs.Cells(rowIndex, sequenceCol).Value
            Print #debugFile, "Added to dataDict: " & compareKey & " with sequence: " & compareWs.Cells(rowIndex, sequenceCol).Value
        End If
    Next rowIndex

    ' 모든 시트를 순회하며 데이터 업데이트
    For Each ws In ThisWorkbook.Worksheets
        Print #debugFile, "Processing Sheet: " & ws.Name
        ' 제외할 시트 목록에 포함되지 않은 시트만 처리
        If excludeDict.exists(ws.Name) Then
            Print #debugFile, "Sheet is excluded: " & ws.Name
            GoTo NextSheet
        End If
        
        Print #debugFile, "Sheet is not excluded: " & ws.Name
        On Error Resume Next
        
        ' 헤더 위치 동적으로 찾기
        Dim nameCol As Long, widthCol As Long, utilityCol As Long, seqCol As Long
        nameCol = FindColumn(ws, "name")
        widthCol = FindColumn(ws, "width/diameter")
        utilityCol = FindColumn(ws, "utility")
        seqCol = FindColumn(ws, "순번")
        
        ' 순번 열이 없다면 새로 추가
        If seqCol = 0 Then
            seqCol = ws.Cells(1,
